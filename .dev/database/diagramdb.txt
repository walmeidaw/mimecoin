Project MimeCoin {
  database_type: 'PostgreSQL'
}

enum status{
  active [note:"Ativo"]
  deactive [note: "Desativado"]
  blocked [note: "Bloqueado"]
}

enum transaction_type{
  mint [note:"Mint é crédito gerado"]
  transfer [note: "Transferência entre contas"]
  deposit [note: "Deposíto é a conversão de dinheiro real em virtual"]
  withdraw [note: "É uma possível troca de moeda virtual em dinheiro real"]
  payment [note: "Uso de moeda virtual para pagamento"]
  bonus [note: "Crédito de bônus"]
  cashback [note: "Crédito de cashback"]
  refund [note: "Reembolso"]
}

enum transaction_status{
  pending [note:"Pendente"]
  confirmed [note: "Confirmada"]
  cancelled [note: "Cancelada"]
}

Table user{
  id integer [pk]
  name varchar
  lastName varchar
  email varchar
  password varchar
  status status

  created_at timestamp
  updated_at timestamp

  indexes{
    email
    status
  }
}

Table user_limit{
  id integer [pk]
  id_user integer [ref: > user.id]
  max_namespaces integer [ note: "O máximo padrão é 1."]
  expires_at timestamp [note: "diz que um limite pode expirar"]
  active boolean [ default: true ]

  created_at timestamp
  updated_at timestamp

  indexes{
    id_user
  }
  
  Note: "Cada usuário pode ter vários limites, o limite real é a soma dos limites ativos e não expirados."
}

Table user_namespace{
  id_user integer [ref: > user.id]
  id_namespace integer [ref: > namespace.id]

  created_at timestamp
  updated_at timestamp

  indexes{
    (id_user, id_namespace) [pk]
  }
}

Table access_token{
  id integer pk
  id_user integer [ref: > user.id ]
  id_namespace integer [ref: > namespace.id ]

  key varchar
  secret varchar
  expiresAt varchar

  created_at timestamp
  updated_at timestamp

  indexes{
    id_user
    id_namespace
  }
}

Table customer{
  id integer [pk]
  name varchar
  birthdate date
  email varchar
  document varchar
  status status
  pin varchar [note:"hash do pin"]

  created_at timestamp
  updated_at timestamp

  indexes{
    name
    document
    email
    status
  }
}

Table namespace{
  id integer [pk]
  code varchar [ unique, note: "O códio são 3 dígitos de 0 a 9" ]
  pic varchar
  name varchar
  status status

  created_at timestamp
  updated_at timestamp

  indexes{
    code
    name
    status
  }
}

Table namespace_limit{
  id integer [pk]
  id_namespace integer [ref: > namespace.id]
  max_offer bigint [ note: "Por padrão todo namespace tem 100000 de oferta maxima." ]
  precision int [ note: "Por padrão todo namespace tem 0 ou 2 de precisão decimal. Valor máximo é 9. "]
  expires_at timestamp [note: "diz que um limite pode expirar"]
  active boolean [ default: true ]

  created_at timestamp
  updated_at timestamp
  
  indexes{
    id_namespace
    expires_at
  }

  Note: "Cada namespace pode ter vários limites, o limite real é a soma dos limites ativos e não expirados."
}

Table account{
  id integer [pk]
  id_customer integer [ref: - customer.id]

  namespace_code varchar [ref: > namespace.code]
  account_number varchar [unique, note:"número da conta sem digito verificador"]
  account_key varchar [note:"digito verificador"]
  account_password varchar [note:"hash da senha da conta"]

  balance bigint
  balance_extra bigint

  created_at timestamp
  updated_at timestamp

  indexes{
    (namespace_code, account_number) [ unique ]
    id_customer
    namespace_code
    account_number
  }
}

Table transaction{
  id integer [pk]
  type transaction_type
  date_transation timestamp
  amount bigint [note: "O valor é negativo sempre que for uma subtração da conta e positivo quando for uma adição"]
  headline varchar
  details text

  id_account integer [ref: > account.id, note: "Cria um registro de transação para cada conta envolvida" ]
  id_namespace integer [ref: > namespace.id ]
  id_account_origin integer [ref: > account.id ]
  id_account_target integer [ref: > account.id ]

  status transaction_status
  hash varchar [ note: "[id_namespace] + [id_account_origin] + [type] + [amount] + [id_account_target] + [ pin ]"]

  created_at timestamp
  confirmed_at timestamp

  indexes{
    type
    id_namespace
    id_account_origin
    id_account_target
  }
}

Table payment_order{
  id integer [pk]
  digits varchar [unique, note: "46 digitos"]

  id_account_origin integer [ref: > account.id ]
  due date
  amount bigint
  status transaction_status 

  created_at timestamp

  indexes{
    digits
    id_account_origin
    status
  }
}
